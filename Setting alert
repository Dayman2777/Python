# Assign 'log_file' to a string containing username, date, login time, and IP address for a series of login attempts.
log_file = "eraab 2022-05-10 6:03:41 192.168.152.148 \niuduike 2022-05-09 6:46:40 192.168.22.115 19:30:45
# Assign 'pattern' to a regular expression that matches with all valid IP addresses and only those
pattern = "\d{1,3}\. \d{1,3}\. \d{1,3}\. \d{1,3}"
# Use 're.findall()' on 'pattern' and 'log_file' and assign 'valid_ip_addresses' to the output 
valid_ip_addresses = re.findall(pattern, log_file)
# Assign 'flagged_addresses' to a list of IP addresses that have been previously flagged for unusual activity
flagged_addresses = ["192.168.190.178", "192.168.96.200", "192.168.168.144"]
# Iterative statement begins here
# Loop through 'valid_ip_addresses' with 'address' as the loop variable
for address in valid_ip_addresses:
    # Conditional begins here
    # If "address' belongs to 'flagged_addresses', display "The IP address ___ has been flagged for further analysis."
    if address in flagged_addresses:
      print("The IP address", address, "has been flagged for further analysis.")
    # Otherwise, display "The IP address ___ does not require further analysis.")
else:
  print("The IP address", address, "does not require further analysis.")
